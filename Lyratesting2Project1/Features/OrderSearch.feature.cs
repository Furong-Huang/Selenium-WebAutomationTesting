// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Lyratesting2Project1.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OrderSearch")]
    public partial class OrderSearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "OrderSearch.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OrderSearch", "\tIn order to have a view the orders\' situation\r\n\tAs an administrator of EduSoho\r\n" +
                    "\tI want to do course search and class search based on some conditions", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Course Order Search")]
        [NUnit.Framework.CategoryAttribute("OrderSearch")]
        [NUnit.Framework.TestCaseAttribute("", "", "", "", "", "20", null)]
        [NUnit.Framework.TestCaseAttribute("2015-06-11 10:57", "已付款", "", "订单号", "C2015061110570175312", "1", null)]
        [NUnit.Framework.TestCaseAttribute("2018-06-11 12:24", "已付款", "", "购买者用户名", "t22222", "2", null)]
        [NUnit.Framework.TestCaseAttribute("", "已付款", "支付宝", "", "", "0", null)]
        [NUnit.Framework.TestCaseAttribute("2015-06-02 15:14", "已付款", "", "课程名称", "购买课程《ES特色功能--班级》", "1", null)]
        public virtual void CourseOrderSearch(string date, string status, string payment_Method, string keyword_Type, string keyword_Content, string order_Result, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "OrderSearch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Course Order Search", null, @__tags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "username",
                            "password"});
                table10.AddRow(new string[] {
                            "admin",
                            "5EstafeyEtre"});
#line 8
 testRunner.Given("I am on the order page", ((string)(null)), table10, "Given ");
#line hidden
#line 11
 testRunner.When(string.Format("I can do course search based on some conditions such as \"{0}\" and \"{1}\" and \"{2}\"" +
                            " and \"{3}\" and \"{4}\"", date, status, payment_Method, keyword_Type, keyword_Content), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.Then(string.Format("the {0} order_result can be seen", order_Result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Class Order Search")]
        [NUnit.Framework.CategoryAttribute("OrderSearch")]
        [NUnit.Framework.TestCaseAttribute("", "", "", "", "", "5", null)]
        [NUnit.Framework.TestCaseAttribute("2015-06-30 16:59", "已付款", "站外支付", "订单号", "CR2015063016591966296", "1", null)]
        [NUnit.Framework.TestCaseAttribute("2018-06-11 11:15", "已付款", "", "购买者用户名", "t22222", "1", null)]
        [NUnit.Framework.TestCaseAttribute("2015-06-30 16:59", "已付款", "站外支付", "班级名", "EduSoho产品介绍", "2", null)]
        [NUnit.Framework.TestCaseAttribute("2015-06-30 16:59", "已付款", "站外支付", "购买者用户名", "River", "1", null)]
        public virtual void ClassOrderSearch(string date, string status, string payment_Method, string keyword_Type, string keyword_Content, string order_Result, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "OrderSearch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Class Order Search", null, @__tags);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "username",
                            "password"});
                table11.AddRow(new string[] {
                            "admin",
                            "5EstafeyEtre"});
#line 23
 testRunner.Given("I am on the order page", ((string)(null)), table11, "Given ");
#line hidden
#line 26
 testRunner.When(string.Format("I can do class search based on some conditions such as \"{0}\" and \"{1}\" and \"{2}\" " +
                            "and \"{3}\" and \"{4}\"", date, status, payment_Method, keyword_Type, keyword_Content), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.Then(string.Format("the {0} order_result can be seen", order_Result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
